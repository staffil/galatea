"""
Django settings for galatea project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import os
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")
DB_NAME=os.getenv("DB_NAME")
DB_PASSWORD=os.getenv("DB_PASSWORD")
DB_USER=os.getenv("DB_USER")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



USE_I18N = True
USE_L10N = True
USE_TZ = True
LANGUAGE_CODE = 'ko'

LANGUAGES = [
    ('ko', '한국어'),
    ('en', 'English'),
    ('ja', '日本語'),
    ('zh', '中文'),
    ('fr', 'Français'),
    ('es', 'Español'),
    ('pt', 'Português'),    
    ('ru', 'Русский'),      
    ('de', 'Deutsch'), 
    ('ar', 'العربية'),
    ('hi', 'हिन्दी'),
   
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =os.getenv("SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    '54.173.112.53',
    'ec2-54-173-112-53.compute-1.amazonaws.com',    
    'galatea.website',
    'www.galatea.website',
    '127.0.0.1:8093'
]

# Application definition


INSTALLED_APPS = [
"django.contrib.auth",
"django.contrib.admin",
'django.contrib.sites',
'allauth',
'allauth.account',
'django.contrib.humanize',
'allauth.socialaccount',
'allauth.socialaccount.providers.google',
"allauth.socialaccount.providers.github", 
"django.contrib.contenttypes",
"django.contrib.sessions",
"django.contrib.messages",
"django.contrib.staticfiles",
"django_extensions",
"customer_ai",
"celebrity",
"makeImage",
"payment",
"home",
"cloning",
"makeVoice",
"register",
"mypage",
"user_auth",
'modeltranslation',
'distribute',
"helpdesk",
"invest",
]
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
USE_X_FORWARDED_HOST = True
SITE_ID = 2
SOCIALACCOUNT_AUTO_SIGNUP = True

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

LOGIN_REDIRECT_URL = '/'   
LOGOUT_REDIRECT_URL = '/'

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware", 
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]
LANGUAGE_COOKIE_NAME = 'django_language'
ROOT_URLCONF = "galatea.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR/'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "galatea.wsgi.application"


SESSION_COOKIE_AGE = 3600 
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
SESSION_ENGINE = 'django.contrib.sessions.backends.db' 
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",  
        "NAME": DB_NAME,                    
        "USER": DB_USER,                     
        "PASSWORD": DB_PASSWORD,          
        "HOST": "172.31.37.216",        # 인스턴스 바꾸면 여기 바꾸기          
        "PORT": "3306",  
	"CONN_MAX_AGE": 600              
    }
}

dotenv_path = BASE_DIR / ".env"
SECRET_KEY = os.getenv("SECRET_KEY", "fallback-secret-key")


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/


TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), # 이 경로가 프로젝트 루트의 'static' 폴더를 가리켜야 합니다.
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# db 만들기 전까지 일단 session 에 값 저장
SESSION_ENGINE = "django.contrib.sessions.backends.db"
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
    }
}

AUTH_USER_MODEL = 'home.Users'
LOGIN_URL = '/register/login/'


SOCIALACCOUNT_PROVIDERS = {
    "github": {
        "APP": {
            "client_id": os.getenv("SOCIAL_AUTH_GITHUB_KEY"),
            "secret": os.getenv("SOCIAL_AUTH_GITHUB_SECRET"),
            "key": ""
        }
    },
    'google': {
        'APP': {
            'client_id': os.getenv('GOOGLE_CLIENT_ID'),
            'secret': os.getenv('GOOGLE_CLIENT_SECRET'),
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': '/home/ubuntu/galatea/logs/django.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

