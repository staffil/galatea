var u={linear:[0,0,1,1],ease:[.6,0,0,.6],out:[.25,.1,.25,1],expo:[.16,1,.3,1],back:[.34,1.56,.64,1]},m=a=>`cubic-bezier(${a.join(",")})`;var r=class{constructor(t){typeof t!="function"?(console.warn("Integrator: an integrator must be constructed with an acceleration function"),this._accelerationForState=()=>0):this._accelerationForState=t}integrateState(t,e){let s=this._evaluateState(t),i=this._evaluateStateWithDerivative(t,e*.5,s),n=this._evaluateStateWithDerivative(t,e*.5,i),o=this._evaluateStateWithDerivative(t,e,n),p=1/6*(s.dx+2*(i.dx+n.dx)+o.dx),f=1/6*(s.dv+2*(i.dv+n.dv)+o.dv);return t.x+=p*e,t.v+=f*e,t}_evaluateState(t){return{dx:t.v,dv:this._accelerationForState(t)}}_evaluateStateWithDerivative(t,e,s){let i={x:t.x+s.dx*e,v:t.v+s.dv*e};return{dx:i.v,dv:this._accelerationForState(i)}}};var c=class{constructor(t={}){var e;this.options={stiffness:100,damping:10,velocity:0,tolerance:.01},this._cacheValue={},this._velocity=(e=t.velocity)!==null&&e!==void 0?e:0,this.options={...this.options,...t},this._integrator=new r(s=>-this.options.stiffness*s.x-this.options.damping*s.v),this.totalDuration=this.getValue().time}next(t,e,s){let i={x:t-1,v:e},n=this._integrator.integrateState({...i},s),o=this.checkFinished(n.x,n.v);return{value:1+n.x,velocity:n.v,finished:o}}checkFinished(t,e){let s=Math.abs(t)<this.options.tolerance,i=Math.abs(e)<this.options.tolerance;return s&&i}getValue({endTime:t}={endTime:1/0}){let e=0,s=0,i=this._velocity,n=!1,o=1/60;for(;!(n||e>t);)e+=o,this._cacheValue[e]?{value:s,velocity:i,finished:n}=this._cacheValue[e]:({value:s,velocity:i,finished:n}=this.next(s,i,o),this._cacheValue[e]={value:s,velocity:i,finished:n});return{value:s,time:e}}getEaseFunction(){return t=>t<=0?0:t>=1?1:this.getValue({endTime:t*this.totalDuration}).value}};function l({stiffness:a=100,damping:t=10,mass:e=1,velocity:s=0}){let i=new c({stiffness:a,damping:t,mass:e,velocity:s}),n=i.totalDuration,o=i.getEaseFunction();return{duration:n,easeFunction:o}}var h={basic:{stiffness:200,damping:30,mass:1},small:{stiffness:480,damping:50,mass:1},quick:{stiffness:800,damping:55,mass:1},medium:{stiffness:270,damping:25,mass:1},large:{stiffness:100,damping:15,mass:1},slow:{stiffness:70,damping:20,mass:1},rapid:{stiffness:1e3,damping:55,mass:1},bounce:{stiffness:300,damping:15,mass:1}},v=Object.fromEntries(Object.entries(h).map(([a,t])=>{let e=l(t);return[a,{...e,ease:e.easeFunction}]}));var z=u,W=u;export{u as bezier,m as bezierToCss,W as beziers,z as easings,h as spring,v as springEaseWithDuration};
