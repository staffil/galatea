var a=class{constructor(t){typeof t!="function"?(console.warn("Integrator: an integrator must be constructed with an acceleration function"),this._accelerationForState=()=>0):this._accelerationForState=t}integrateState(t,e){let i=this._evaluateState(t),n=this._evaluateStateWithDerivative(t,e*.5,i),o=this._evaluateStateWithDerivative(t,e*.5,n),s=this._evaluateStateWithDerivative(t,e,o),h=1/6*(i.dx+2*(n.dx+o.dx)+s.dx),l=1/6*(i.dv+2*(n.dv+o.dv)+s.dv);return t.x+=h*e,t.v+=l*e,t}_evaluateState(t){return{dx:t.v,dv:this._accelerationForState(t)}}_evaluateStateWithDerivative(t,e,i){let n={x:t.x+i.dx*e,v:t.v+i.dv*e};return{dx:n.v,dv:this._accelerationForState(n)}}};var r=class{constructor(t={}){var e;this.options={stiffness:100,damping:10,velocity:0,tolerance:.01},this._cacheValue={},this._velocity=(e=t.velocity)!==null&&e!==void 0?e:0,this.options={...this.options,...t},this._integrator=new a(i=>-this.options.stiffness*i.x-this.options.damping*i.v),this.totalDuration=this.getValue().time}next(t,e,i){let n={x:t-1,v:e},o=this._integrator.integrateState({...n},i),s=this.checkFinished(o.x,o.v);return{value:1+o.x,velocity:o.v,finished:s}}checkFinished(t,e){let i=Math.abs(t)<this.options.tolerance,n=Math.abs(e)<this.options.tolerance;return i&&n}getValue({endTime:t}={endTime:1/0}){let e=0,i=0,n=this._velocity,o=!1,s=1/60;for(;!(o||e>t);)e+=s,this._cacheValue[e]?{value:i,velocity:n,finished:o}=this._cacheValue[e]:({value:i,velocity:n,finished:o}=this.next(i,n,s),this._cacheValue[e]={value:i,velocity:n,finished:o});return{value:i,time:e}}getEaseFunction(){return t=>t<=0?0:t>=1?1:this.getValue({endTime:t*this.totalDuration}).value}};function x({stiffness:c=100,damping:t=10,mass:e=1,velocity:i=0}){let n=new r({stiffness:c,damping:t,mass:e,velocity:i}),o=n.totalDuration,s=n.getEaseFunction();return{duration:o,easeFunction:s}}export{x as getSpringEasing};
