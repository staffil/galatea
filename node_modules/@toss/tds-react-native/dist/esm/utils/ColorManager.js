"use strict";import{formatHex as e,oklch as n,parse as l,converter as c,round as i,clampChroma as p}from"culori";export class ColorManager{color;alpha=1;constructor(t){const o=l(t);if(!o)throw new Error("\uC720\uD6A8\uD55C \uC0C9\uC0C1 \uD3EC\uB9F7\uC774 \uC544\uB2D9\uB2C8\uB2E4.");const a=n(o);if(!a)throw new Error("\uC720\uD6A8\uD55C \uC0C9\uC0C1 \uD3EC\uB9F7\uC774 \uC544\uB2D9\uB2C8\uB2E4.");return this.color={h:0,alpha:1,...a},this.alpha=o.alpha??1,this}setLightness(t){return this.color.l=t,this.color=p(this.color,"oklch","rgb"),this}setAlpha(t){return this.alpha=t,this}getOklch(){return this.color}getHue(){return this.color.h}getChroma(){return this.color.c}getLightness(){return this.color.l}getAlpha(){return this.alpha}getHex(){return e({...this.color,alpha:this.alpha})}getRgba(){return m({...this.color,alpha:this.alpha})}}const g=c("rgb"),u=i(2),s=r=>Math.max(0,Math.min(1,r||0)),h=r=>Math.round(s(r)*255);export const serializeRgba=r=>{const t=h(r.r),o=h(r.g),a=h(r.b);return`rgba(${t}, ${o}, ${a}, ${u(s(r.alpha??1))})`};function m(r){return serializeRgba(g(r))}
