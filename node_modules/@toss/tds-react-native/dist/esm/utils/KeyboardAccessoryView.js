"use strict";import{jsx as w}from"react/jsx-runtime";import{useCallback as h,useEffect as p,useRef as L,useState as u}from"react";import{AccessibilityInfo as x,Keyboard as l,LayoutAnimation as E,Platform as f,StyleSheet as K,View as O}from"react-native";export function KeyboardAccessoryView({style:t,contentContainerStyle:o,enabled:a=!0,children:i,onLayout:d,keyboardVerticalOffset:s,...S}){const[y,g]=u(null),[b,C]=u(null),c=F(),M=L(null),r=h(e=>{const{duration:n,easing:m}=e;n&&m&&!c&&E.configureNext({duration:n>10?n:10,update:{duration:n>10?n:10,type:E.Types[m]||"keyboard"}}),g(e)},[c]),R=h(e=>{C(e.nativeEvent.layout),d?.(e)},[d]);p(()=>{const e=new Set;return f.OS==="ios"?e.add(l.addListener("keyboardWillChangeFrame",r)):f.OS==="android"&&(e.add(l.addListener("keyboardDidHide",r)),e.add(l.addListener("keyboardDidShow",r))),()=>{e.forEach(n=>{n?.remove()})}},[r]);const k=b==null||y==null?0:v({layoutFrame:b,keyboardFrame:y.endCoordinates,offset:s??0,isReduceMotionEnabled:c});return w(O,{ref:M,style:K.compose(t,{paddingBottom:a?k:void 0}),onLayout:R,...S,children:i})}function v({layoutFrame:t,keyboardFrame:o,offset:a=0,isReduceMotionEnabled:i}){if(i&&o.screenY===0)return 0;const s=o.screenY-a;return Math.max(t.y+t.height-s,0)}function F(){const[t,o]=u(!1);return p(()=>{async function a(){try{const i=await x.isReduceMotionEnabled();o(i)}catch{}}f.OS==="ios"&&a()},[]),t}
