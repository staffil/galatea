"use strict";import{badgeSizeMap as s,defaultTypographyRule as n,getAndroidTypographyRule as u,getIosTypographyRule as h,iconSizeMap as i,linkSizeMap as c,textSizeMap as g,TYPOGRAPY_RULE_ORDER as o}from"@toss/tds-typography";import{Platform as T}from"react-native";export const Typography={T1:"t1",T2:"t2",T3:"t3",T4:"t4",T5:"t5",T6:"t6",T7:"t7",ST1:"st1",ST2:"st2",ST3:"st3",ST4:"st4",ST5:"st5",ST6:"st6",ST7:"st7",ST8:"st8",ST9:"st9",ST10:"st10",ST11:"st11",ST12:"st12",ST13:"st13"};function y(t){return T.OS==="ios"?h(t??"Large"):T.OS==="android"?u(Math.max(t,100)):n}export function getTypographyMap(t){const r=y(t);return Object.fromEntries(r.map((p,e)=>[o[e],g[p]]))}export const defaultTypographyMap=Object.fromEntries(n.map((t,r)=>[o[r],g[t]]));export function getLinkTypography(t){const r=y(t);return Object.fromEntries(r.map((p,e)=>[o[e],c[p]]))}export function getIconTypography(t){const r=y(t);return Object.fromEntries(r.map((p,e)=>[o[e],i[p]]))}export function getBadgeTypography(t){const r=y(t);return Object.fromEntries(r.map((p,e)=>[o[e],s[p]]))}
