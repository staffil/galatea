import { type adaptive } from '@toss/tds-colors';
import { type PropsWithChildren } from 'react';
export interface AdaptiveColorContextValue {
    adaptive: typeof adaptive;
}
export declare const defaultAdaptiveColorValue: AdaptiveColorContextValue;
export declare const AdaptiveColorContext: import("react").Context<AdaptiveColorContextValue>;
export declare function AdaptiveColorProvider({ children }: PropsWithChildren<{}>): import("react/jsx-runtime").JSX.Element;
export declare function useAdaptive(): Record<"opacity50" | "opacity100" | "opacity200" | "opacity300" | "opacity400" | "opacity500" | "opacity600" | "opacity700" | "opacity800" | "opacity900" | "disabledBlue500" | "background" | "layeredBackground" | "floatBackground" | "dimmedBackground" | "hairlineBorder" | "greyBackground" | "pcScreenBg" | "grey50" | "grey100" | "grey200" | "grey300" | "grey400" | "grey500" | "grey600" | "grey700" | "grey800" | "grey900" | "greyOpacity50" | "greyOpacity100" | "greyOpacity200" | "greyOpacity300" | "greyOpacity400" | "greyOpacity500" | "greyOpacity600" | "greyOpacity700" | "greyOpacity800" | "greyOpacity900" | "blue50" | "blue100" | "blue200" | "blue300" | "blue400" | "blue500" | "blue600" | "blue700" | "blue800" | "blue900" | "red50" | "red100" | "red200" | "red300" | "red400" | "red500" | "red600" | "red700" | "red800" | "red900" | "orange50" | "orange100" | "orange200" | "orange300" | "orange400" | "orange500" | "orange600" | "orange700" | "orange800" | "orange900" | "yellow50" | "yellow100" | "yellow200" | "yellow300" | "yellow400" | "yellow500" | "yellow600" | "yellow700" | "yellow800" | "yellow900" | "green50" | "green100" | "green200" | "green300" | "green400" | "green500" | "green600" | "green700" | "green800" | "green900" | "teal50" | "teal100" | "teal200" | "teal300" | "teal400" | "teal500" | "teal600" | "teal700" | "teal800" | "teal900" | "purple50" | "purple100" | "purple200" | "purple300" | "purple400" | "purple500" | "purple600" | "purple700" | "purple800" | "purple900" | "backgroundDimmed" | "backgroundLevelB01" | "backgroundLevel01" | "backgroundLevel02", string>;
