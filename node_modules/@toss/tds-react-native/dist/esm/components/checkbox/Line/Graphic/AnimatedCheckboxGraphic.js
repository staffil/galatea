"use strict";import{jsx as a,jsxs as h,Fragment as G}from"react/jsx-runtime";import{Svg as I}from"@granite-js/native/react-native-svg";import{colors as k}from"@toss/tds-colors";import g from"hex-to-rgba";import{useCallback as b,useEffect as c,useMemo as V,useRef as y,useState as _}from"react";import{Animated as t,Pressable as j,View as F}from"react-native";import{useAdaptive as R}from"../../../../core/index.js";import{SPRING_CONFIG as O,TIMING_CONFIG as P}from"../../const.js";import{Check as x}from"./paths.js";import{styles as C}from"./styles.js";export function AnimatedCheckboxGraphic({checked:s,size:l,children:D,style:S,onPress:d,onTouchStart:v,onTouchEnd:A,onTouchCancel:N,...T}){const[o,r]=_(s?"on":"off"),m=R(),p=V(()=>({grey200:g(m.grey200??k.grey200),blue500:g(k.blue500)}),[m.grey200]),w=b(()=>{r(e=>e==="on"?"on-press":"off-press")},[]),u=b(()=>{r(s?e=>e==="on-press"?"on":"off":e=>e==="off-press"?"off":"on")},[s]);c(()=>{r(s?"on":"off")},[s]);const f=y(new t.Value(n.check[o].strokeDashoffset)).current;c(()=>{t.timing(f,{toValue:n.check[o].strokeDashoffset,...P,useNativeDriver:!0}).start()},[o,f]);const i=y(new t.Value(n.check[o].scale)).current;return c(()=>{t.spring(i,{toValue:n.check[o].scale,...O,useNativeDriver:!0}).start()},[o,i]),a(j,{onTouchStart:e=>{w(),v?.(e)},onTouchEnd:e=>{u(),A?.(e)},onTouchCancel:e=>{u(),N?.(e)},onPress:d,style:[C.container,S],accessibilityRole:"checkbox",accessibilityState:{checked:s,disabled:!1},...T,children:h(G,{children:[a(F,{style:[{width:l,height:l},C.checkContainer],children:h(E,{viewBox:"0 0 24 24",style:{transform:[{scale:i}]},children:[a(x,{stroke:p.grey200}),a(x,{stroke:p.blue500,strokeDasharray:"24px 24px",strokeDashoffset:f})]})}),D]})})}const E=t.createAnimatedComponent(I),n={check:{off:{strokeDashoffset:24,scale:1},"off-press":{strokeDashoffset:24*.6,scale:.9},on:{strokeDashoffset:0,scale:1},"on-press":{strokeDashoffset:10,scale:.9}}};
