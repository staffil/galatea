"use strict";import{jsx as a,jsxs as P}from"react/jsx-runtime";import{useState as v}from"react";import{Platform as s,Pressable as L,StyleSheet as O,View as j}from"react-native";import{colors as e}from"@toss/tds-colors";import{useAdaptive as k,useColorPreference as R}from"../../../core/index.js";import{Animated as C}from"../../../interactions/animated/index.js";import{useAnimatePresence as z,useSafeAreaTop as G}from"../../../utils/index.js";import{Txt as H}from"../../txt/index.js";import{useTextLine as I,useTimer as V,useToastAnimation as _}from"../hooks/index.js";const B=C.createAnimatedComponent(L);export const ToastTop=({open:l,text:d,icon:t,duration:m=3,onClose:o,onExited:p=()=>{},onEntered:h=()=>{}})=>{const i=G(),[r,f]=v(),g=r?-(i+r):void 0,{textLine:u,updateTextLine:y}=I(),x=k(),{colorPreference:n}=R(),{enter:T,exit:S,animatedStyle:w}=_({position:"top",initialY:g}),{presenceState:A}=z(l,{enter:T,exit:S,onExited:p,onEntered:h});return V({duration:m,callback:o}),A==="invisible"?null:P(B,{onPress:o,onLayout:b=>{f(b.nativeEvent.layout.height)},style:[c.container,w,{top:i,paddingLeft:t?12:16,borderRadius:u==="single"?100:20,backgroundColor:n==="light"?e.white:e.darkThemeGrey200,shadowColor:n==="light"?e.greyOpacity200:e.darkThemeGrey50}],children:[t&&a(j,{style:c.icon,children:t}),a(H,{onTextLayout:y,typography:"t6",fontWeight:"semiBold",color:x.opacity800,children:d})]})};const c=O.create({container:{position:"absolute",alignSelf:"center",zIndex:100,flexDirection:"row",alignItems:"center",paddingVertical:12,paddingRight:16,marginHorizontal:s.OS==="ios"?18:s.OS==="android"?12:0,shadowOffset:{width:0,height:2},shadowRadius:30,shadowOpacity:1,elevation:50},icon:{marginRight:10}});
