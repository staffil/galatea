"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.serializeRgba=exports.ColorManager=void 0;const culori_1=require("culori");class ColorManager{color;alpha=1;constructor(t){const e=(0,culori_1.parse)(t);if(!e)throw new Error("\uC720\uD6A8\uD55C \uC0C9\uC0C1 \uD3EC\uB9F7\uC774 \uC544\uB2D9\uB2C8\uB2E4.");const o=(0,culori_1.oklch)(e);if(!o)throw new Error("\uC720\uD6A8\uD55C \uC0C9\uC0C1 \uD3EC\uB9F7\uC774 \uC544\uB2D9\uB2C8\uB2E4.");return this.color={h:0,alpha:1,...o},this.alpha=e.alpha??1,this}setLightness(t){return this.color.l=t,this.color=(0,culori_1.clampChroma)(this.color,"oklch","rgb"),this}setAlpha(t){return this.alpha=t,this}getOklch(){return this.color}getHue(){return this.color.h}getChroma(){return this.color.c}getLightness(){return this.color.l}getAlpha(){return this.alpha}getHex(){return(0,culori_1.formatHex)({...this.color,alpha:this.alpha})}getRgba(){return formatRgba({...this.color,alpha:this.alpha})}}exports.ColorManager=ColorManager;const rgb=(0,culori_1.converter)("rgb"),twoDecimals=(0,culori_1.round)(2),clamp=r=>Math.max(0,Math.min(1,r||0)),fixup=r=>Math.round(clamp(r)*255),serializeRgba=r=>{const t=fixup(r.r),e=fixup(r.g),o=fixup(r.b);return`rgba(${t}, ${e}, ${o}, ${twoDecimals(clamp(r.alpha??1))})`};exports.serializeRgba=serializeRgba;function formatRgba(r){return(0,exports.serializeRgba)(rgb(r))}
