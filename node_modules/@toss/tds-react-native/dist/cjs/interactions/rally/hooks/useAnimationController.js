"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useAnimationController=useAnimationController;const utils_1=require("@toss/utils"),react_1=require("react"),react_native_1=require("react-native"),index_js_1=require("../utils/index.js"),useWaitFor_js_1=require("./utils/useWaitFor.js");function useAnimationController({forwardAnimation:e,backwardAnimation:u,playCount:l=1,loopDelay:n=0,loopMode:a="alternate",mounted:y,delay:c=0}){const{waitFor:r}=(0,useWaitFor_js_1.useWaitFor)(y),t=(0,react_1.useRef)(!1),k=(0,react_1.useRef)(0),i=l==="infinite"?1/0:l,f=e,C=(0,react_1.useCallback)(async()=>{if(await r(),t.current===!0)return!1;t.current=!0;try{await(0,utils_1.delay)(c);for(const s of(0,index_js_1.repeatCycle)([e,u],i,{gutter:animationControllerDelay(n)}))if(s==null||!await s.start())return!1;return!0}finally{t.current=!1}},[e,u,i,c,n,r]),p=(0,react_1.useCallback)(async()=>{if(await r(),t.current===!0)return!1;t.current=!0;try{await(0,utils_1.delay)(c);for(const s of(0,index_js_1.repeat)(e,i,{gutter:animationControllerDelay(n)}))if(s==null||(s.seekProgress(0),!await s.start()))return!1;return!0}finally{t.current=!1}},[c,e,i,n,r]),d=(0,react_1.useCallback)(s=>{t.current=!1,e.seekProgress(s)},[e]),o=(0,react_1.useMemo)(()=>a==="normal"?p:C,[a,p,C]),b=(0,react_1.useCallback)(async()=>(await r(),t.current=!1,k.current=0,e.seekProgress(0),await o()),[e,o,r]),F=(0,react_1.useCallback)(async()=>(await r(),t.current=!1,k.current=0,e.seekProgress(1),await u.start()),[e,u,r]),P=(0,react_1.useCallback)(()=>{t.current=!1,k.current=0,f.reset()},[f]),g=(0,react_1.useCallback)(()=>{f.stop(),t.current=!1},[f]);return usePauseOnBackground({play:o,pause:g,isPlaying:t,condition:i===1/0}),(0,react_1.useMemo)(()=>({startForward:b,startBackward:F,play:o,seekProgress:d,reset:P,pause:g}),[b,F,o,d,P,g])}function animationControllerDelay(e){return{start:async()=>(await(0,utils_1.delay)(e),!0),seekProgress:()=>{},stop:()=>{},reset:()=>{}}}function usePauseOnBackground({play:e,pause:u,condition:l,isPlaying:n}){const a=(0,react_1.useRef)(!1);(0,react_1.useEffect)(()=>{if(!l)return;function y(r){switch(r){case"active":{a.current===!0&&(a.current=!1,e());break}case"background":case"inactive":{n.current===!0&&(a.current=!0,u());break}default:break}}const c=react_native_1.AppState.addEventListener("change",y);return()=>{c.remove()}},[l,n,u,e])}
