"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createInterpolationStyle=createInterpolationStyle;const utils_1=require("@toss/utils");function createInterpolationStyle(o,{inputRange:l,motion:n}){const r=o.interpolate({inputRange:l,outputRange:[0,1]});return createProgressMotionStyle({progress:r,motion:n})}function createProgressMotionStyle({progress:o,motion:l}){const n={transform:[]},r={transform:[]},i={transform:[]},{perspective:c,...f}=l,m=[["perspective",c],...(0,utils_1.objectEntries)(f)];for(const[s,a]of m)switch(s){case"width":case"height":case"opacity":{const t=a;if(t==null)continue;n[s]=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]});break}case"color":{const t=a;t!=null&&(n.color=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]}));break}case"backgroundColor":{const t=a;typeof t?.from=="string"&&typeof t?.to=="string"&&(n.backgroundColor=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]}));break}case"scaleX":case"scaleY":case"scale":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]});n.transform=[...n.transform,{[s]:e}]}break}case"perspective":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]});n.transform=[...n.transform,{perspective:e}]}break}case"rotateY":case"rotateZ":case"rotateX":case"rotate":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[`${t.from}deg`,`${t.to}deg`]});n.transform=[...n.transform,{[s]:e}]}break}case"translateX":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]});n.transform=[...n.transform,{[s]:e}]}break}case"translateY":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]});n.transform=[...n.transform,{[s]:e}]}break}case"transformOriginX":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]}),u=o.interpolate({inputRange:[0,1],outputRange:[-t.from,-t.to]});r.transform=[{translateX:e},{translateX:u}]}break}case"transformOriginY":{const t=a;if(t!=null){const e=o.interpolate({inputRange:[0,1],outputRange:[t.from,t.to]}),u=o.interpolate({inputRange:[0,1],outputRange:[-t.from,-t.to]});i.transform=[{translateY:e},{translateY:u}]}break}}const p=Array.isArray(r.transform)&&r.transform.length===2,g=Array.isArray(i.transform)&&i.transform.length===2;return p&&(n.transform=[r.transform[0],...n.transform??[],r.transform[1]]),g&&(n.transform=[i.transform[0],...n.transform??[],i.transform[1]]),n}
